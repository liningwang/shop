<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cn.hnust.dao.ProductMapper">
	<resultMap id="BaseResultMap" type="com.cn.hnust.pojo.Product">
		<id column="shopId" property="shopid" jdbcType="INTEGER" />
		<result column="shopTitle" property="shoptitle" jdbcType="VARCHAR" />
		<result column="shopPrice" property="shopprice" jdbcType="DOUBLE" />
		<result column="shopFreight" property="shopfreight" jdbcType="DOUBLE" />
		<result column="shopSalesVolume" property="shopsalesvolume"
			jdbcType="INTEGER" />
		<result column="shopType" property="shoptype" jdbcType="INTEGER" />
		<result column="shopPictureUrl" property="shoppictureurl"
			jdbcType="VARCHAR" />
		<result column="shopGraphicDetails" property="shopgraphicdetails"
			jdbcType="VARCHAR" />
		<result column="classifyId" property="classifyid" jdbcType="INTEGER" />
		<result column="twoClassifyId" property="twoclassifyid"
			jdbcType="INTEGER" />
		<result column="recommend" property="recommend" jdbcType="INTEGER" />
		<result column="shopCount" property="shopCount" jdbcType="INTEGER" />
	</resultMap>
	<resultMap type="com.cn.hnust.pojo.ProductDetail" id="ProductDetail">
		<id column="shopId" property="shopid" jdbcType="INTEGER" />
		<result column="shopTitle" property="shoptitle" jdbcType="VARCHAR" />
		<result column="shopPrice" property="shopprice" jdbcType="DOUBLE" />
		<result column="shopFreight" property="shopfreight" jdbcType="DOUBLE" />
		<result column="shopSalesVolume" property="shopsalesvolume"
			jdbcType="INTEGER" />
		<result column="shopType" property="shoptype" jdbcType="INTEGER" />
		<result column="shopCount" property="shopCount" jdbcType="INTEGER" />
		<result column="shopPictureUrl" property="shoppictureurl"
			jdbcType="VARCHAR" />
		<result column="shopGraphicDetails" property="shopgraphicdetails"
			jdbcType="VARCHAR" />
		<result column="classifyId" property="classifyid" jdbcType="INTEGER" />
		<result column="twoClassifyId" property="twoclassifyid"
			jdbcType="INTEGER" />
		<result column="recommend" property="recommend" jdbcType="INTEGER" />
		<result column="evaluateTime" property="evaluatetime" jdbcType="INTEGER" />
		<result column="evaluateGrade" property="evaluategrade"
			jdbcType="INTEGER" />
		<result column="evaluateContent" property="evaluatecontent"
			jdbcType="VARCHAR" />
		<result column="evaluatePictureUrl" property="evaluatepictureurl"
			jdbcType="VARCHAR" />
		<result column="nickname" property="evaluateName" jdbcType="VARCHAR" />
		<result column="headPortrait" property="evaluateHeadUrl"
			jdbcType="VARCHAR" />
	</resultMap>
	<resultMap id="CommentResultMap" type="com.cn.hnust.pojo.Comment">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="shopId" property="shopid" jdbcType="INTEGER" />
		<result column="evaluateTime" property="evaluatetime" jdbcType="INTEGER" />
		<result column="evaluateGrade" property="evaluategrade"
			jdbcType="INTEGER" />
		<result column="evaluateContent" property="evaluatecontent"
			jdbcType="VARCHAR" />
		<result column="evaluatePictureUrl" property="evaluatepictureurl"
			jdbcType="VARCHAR" />
		<result column="userId" property="userid" jdbcType="INTEGER" />

	</resultMap>
	<resultMap id="ShopCard" type="com.cn.hnust.pojo.ShopCard">
		<result column="shopTitle" property="shopTitle" jdbcType="VARCHAR" />
		<result column="shopPictureUrl" property="shopPictureUrl" jdbcType="VARCHAR" />
		<result column="shopPrice" property="shopPrice" jdbcType="DOUBLE" />
		<result column="shopNumber" property="shopNumber" jdbcType="INTEGER" />
		<result column="shopId" property="shopId" jdbcType="INTEGER" />
		<result column="userId" property="shoppingCartId" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		shopId,shopTitle,shopPrice,shopFreight,shopSalesVolume,shopType,shopPictureUrl,
		shopGraphicDetails,classifyId,twoClassifyId,recommend,shopCount
	</sql>
	<sql id="Base_Detail_List">
		product.shopId, product.shopTitle, product.shopPrice, product.shopFreight,
		product.shopSalesVolume,product.shopCount,
		product.shopType, product.shopPictureUrl,
		product.shopGraphicDetails, product.classifyId, product.twoClassifyId, product.recommend,
		comment.evaluateTime,comment.evaluateGrade,
		comment.evaluateContent,comment.evaluatePictureUrl,user.nickname,user.headPortrait
	</sql>
	<sql id="Base_ShopCard_List">
		product.shopId, product.shopTitle, product.shopPrice, 
		product.shopPictureUrl,user_product.shopNumber,user_product.userId
	</sql>
	<select id="selectProductDetailById" resultMap="ProductDetail"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Detail_List" />
		from product
		left join comment on comment.shopId=product.shopId
		left join user on user.userId=comment.userId
		where product.shopId = #{shopId,jdbcType=INTEGER}
		order by comment.evaluateTime desc limit 0,1
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from product
		where shopId = #{shopid,jdbcType=INTEGER}
	</select>
	<select id="selectByLimit" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from product
		limit #{page,jdbcType=INTEGER}, #{rows,jdbcType=INTEGER}
	</select>
	<select id="selectProductCount" resultType="java.lang.Integer">
		select
	    count(*)
		from product
	</select>
	<select id="selectByUserIdLimit" resultMap="ShopCard">
		select
		<include refid="Base_ShopCard_List" />
		from user_product
		left join product on user_product.shopId=product.shopId
		where user_product.userId=#{userId,jdbcType=INTEGER}
		limit #{page,jdbcType=INTEGER}, #{rows,jdbcType=INTEGER}
	</select>
	<select id="selectByContent" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from product
		where shopTitle like #{content,jdbcType=VARCHAR}
		limit #{page,jdbcType=INTEGER}, #{rows,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from product
		where shopId = #{shopid,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.cn.hnust.pojo.Product">
		insert into product (shopId, shopTitle, shopPrice,
		shopFreight, shopSalesVolume, shopType,
		shopPictureUrl, shopGraphicDetails, classifyId,
		twoClassifyId, recommend)
		values (#{shopid,jdbcType=INTEGER}, #{shoptitle,jdbcType=VARCHAR},
		#{shopprice,jdbcType=DOUBLE},
		#{shopfreight,jdbcType=DOUBLE}, #{shopsalesvolume,jdbcType=INTEGER}, #{shoptype,jdbcType=INTEGER},
		#{shoppictureurl,jdbcType=VARCHAR},
		#{shopgraphicdetails,jdbcType=VARCHAR},
		#{classifyid,jdbcType=INTEGER},
		#{twoclassifyid,jdbcType=INTEGER}, #{recommend,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.cn.hnust.pojo.Product">
		insert into product
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="shopid != null">
				shopId,
			</if>
			<if test="shoptitle != null">
				shopTitle,
			</if>
			<if test="shopprice != null">
				shopPrice,
			</if>
			<if test="shopfreight != null">
				shopFreight,
			</if>
			<if test="shopsalesvolume != null">
				shopSalesVolume,
			</if>
			<if test="shoptype != null">
				shopType,
			</if>
			<if test="shoppictureurl != null">
				shopPictureUrl,
			</if>
			<if test="shopgraphicdetails != null">
				shopGraphicDetails,
			</if>
			<if test="classifyid != null">
				classifyId,
			</if>
			<if test="twoclassifyid != null">
				twoClassifyId,
			</if>
			<if test="recommend != null">
				recommend,
			</if>
			<if test="shopCount != null">
				shopCount,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="shopid != null">
				#{shopid,jdbcType=INTEGER},
			</if>
			<if test="shoptitle != null">
				#{shoptitle,jdbcType=VARCHAR},
			</if>
			<if test="shopprice != null">
				#{shopprice,jdbcType=DOUBLE},
			</if>
			<if test="shopfreight != null">
				#{shopfreight,jdbcType=DOUBLE},
			</if>
			<if test="shopsalesvolume != null">
				#{shopsalesvolume,jdbcType=INTEGER},
			</if>
			<if test="shoptype != null">
				#{shoptype,jdbcType=INTEGER},
			</if>
			<if test="shoppictureurl != null">
				#{shoppictureurl,jdbcType=VARCHAR},
			</if>
			<if test="shopgraphicdetails != null">
				#{shopgraphicdetails,jdbcType=VARCHAR},
			</if>
			<if test="classifyid != null">
				#{classifyid,jdbcType=INTEGER},
			</if>
			<if test="twoclassifyid != null">
				#{twoclassifyid,jdbcType=INTEGER},
			</if>
			<if test="recommend != null">
				#{recommend,jdbcType=INTEGER},
			</if>
			<if test="shopCount != null">
				#{shopCount,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.cn.hnust.pojo.Product">
		update product
		<set>
			<if test="shoptitle != null">
				shopTitle = #{shoptitle,jdbcType=VARCHAR},
			</if>
			<if test="shopprice != null">
				shopPrice = #{shopprice,jdbcType=DOUBLE},
			</if>
			<if test="shopfreight != null">
				shopFreight = #{shopfreight,jdbcType=DOUBLE},
			</if>
			<if test="shopsalesvolume != null">
				shopSalesVolume = #{shopsalesvolume,jdbcType=INTEGER},
			</if>
			<if test="shoptype != null">
				shopType = #{shoptype,jdbcType=INTEGER},
			</if>
			<if test="shoppictureurl != null">
				shopPictureUrl = #{shoppictureurl,jdbcType=VARCHAR},
			</if>
			<if test="shopgraphicdetails != null">
				shopGraphicDetails = #{shopgraphicdetails,jdbcType=VARCHAR},
			</if>
			<if test="classifyid != null">
				classifyId = #{classifyid,jdbcType=INTEGER},
			</if>
			<if test="twoclassifyid != null">
				twoClassifyId = #{twoclassifyid,jdbcType=INTEGER},
			</if>
			<if test="recommend != null">
				recommend = #{recommend,jdbcType=INTEGER},
			</if>
			<if test="shopCount != null">
				shopCount = #{shopCount,jdbcType=INTEGER},
			</if>
		</set>
		where shopId = #{shopid,jdbcType=INTEGER}
	</update>
		<update id="updateShopCountByPrimaryKey">
		update product
		<set>
			<if test="shopCount != null">
				shopCount = shopCount + #{shopCount,jdbcType=INTEGER},
			</if>
		</set>
		where shopId = #{shopid,jdbcType=INTEGER}
	</update>
	<update id="updateShopsalesvolumeByPrimaryKey">
		update product
		<set>
			<if test="shopsalesvolume != null">
				shopSalesVolume = shopSalesVolume + #{shopsalesvolume,jdbcType=INTEGER},
			</if>
		</set>
		where shopId = #{shopid,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.cn.hnust.pojo.Product">
		update product
		set shopTitle = #{shoptitle,jdbcType=VARCHAR},
		shopPrice = #{shopprice,jdbcType=DOUBLE},
		shopFreight = #{shopfreight,jdbcType=DOUBLE},
		shopSalesVolume = #{shopsalesvolume,jdbcType=INTEGER},
		shopType = #{shoptype,jdbcType=INTEGER},
		shopPictureUrl = #{shoppictureurl,jdbcType=VARCHAR},
		shopGraphicDetails = #{shopgraphicdetails,jdbcType=VARCHAR},
		classifyId = #{classifyid,jdbcType=INTEGER},
		twoClassifyId = #{twoclassifyid,jdbcType=INTEGER},
		recommend = #{recommend,jdbcType=INTEGER}
		where shopId = #{shopid,jdbcType=INTEGER}
	</update>
</mapper>